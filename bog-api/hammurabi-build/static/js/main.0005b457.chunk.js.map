{"version":3,"sources":["redux/actions.js","redux/store.js","api.js","Credits.js","FrontNav.js","BuyCredits/index.js","FileInput.js","Songs/index.js","Themes/index.js","Videos.js","Preview.js","Dashboard/index.js","Logout.js","render/Settings.js","render/ChooseThread.js","render/Final.js","render/estimate.js","render/TimeEstimator.js","render/Navbar.js","render/sanitize.js","render/PickComments/Comment.js","render/PickComments/SortableComments.js","render/PickComments/index.js","render/Question.js","render/EditorComponent.js","render/SelfText.js","render/App.js","Themes/_id.js","Admin/UserList.js","Admin/index.js","Account.js","Support.js","AuthedRouter.js","Login.js","Register.js","DefaultRouter.js","App.js","render/serviceWorker.js","index.js"],"names":["setQuestion","content","type","val","setComments","defaultState","comments","question","processed","song","theme","credits","themes","videos","songs","user","users","loggedIn","localStorage","getItem","process","createStore","state","action","_id","undefined","Object","assign","title","selftext_html","includeSelftext","setItem","removeItem","jsonFetch","RequestInfo","RequestInit","method","headers","Content-Type","credentials","fetch","then","res","ok","json","status","store","dispatch","err","error","toast","console","adminGetUsers","data","setUsers","adminCreateUser","body","JSON","stringify","adminSetMultiplier","id","multiplier","adminChangePass","password","adminGiveCredits","quantity","getUser","setUser","changePassword","current","newPassword","passwordCurrent","passwordNew","getCredits","setCreditsAction","checkPrice","buyCredits","getSongs","setSongsAction","uploadSong","formData","r","deleteSong","getThread","thread","sort","mapping","comment","newcomment","Array","isArray","replies","map","enabled","getThemes","setThemesAction","getTheme","themeId","createTheme","editTheme","uploadThemeFiles","deleteTheme","deleteThemeFile","intro","transition","outro","longPollVideo","fileId","postPreview","options","postRender","getState","Accept","questionData","commentData","getVideos","setVideosAction","authorize","email","Headers","authorization","pass","btoa","register","logout","connect","React","Component","[object Object]","args","super","this","handleChange","e","name","value","setState","componentDidMount","render","react_default","a","createElement","Segment","textAlign","secondary","Header","size","Subheader","Content","props","Loader","active","Menu","Item","header","as","Link","to","position","Dropdown","item","text","isAdmin","stripekey","custom","currentPrice","stripe","timeout","perCredit","onPurchase","async","session","redirectToCheckout","sessionId","log","changeQuantity","_","clearTimeout","setTimeout","total","window","Stripe","Container","src_FrontNav","src_Credits","Grid","Column","Message","Form","Radio","label","checked","onChange","Input","min","Math","round","Button","onClick","FileInput","buttonOnly","button","icon","style","fileInput","click","accept","ref","display","Icon","placeholder","file","labelPosition","readOnly","target","files","FormData","append","handleFileChange","List","relaxed","verticalAlign","className","key","floated","origname","Divider","src_FileInput","navigate","selection","length","Popup","trigger","on","fluid","onSubmit","isNaN","limit","slice","retry","rerenderVideo","videoId","location","reload","video","failed","cursor","disabled","finished","href","Description","date","datePad","jsdate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","formatDate","rendering","preview","info","open","url","songOptions","themeOptions","unshift","Select","required","clearable","Dashboard","stackable","width","horizontal","Videos","Themes","src_Songs","src_Preview","Logout","componentWillMount","replace","Fragment","setTheme","setSong","handleTheme","handleSong","resetVideoState","input","loading","fetchThread","catch","preventDefault","indexOf","pattern","match","onlythread","handle","render_Settings","autoFocus","primary","negative","Final","done","send","outroLen","transitionLen","getFull","commentTimes","reduce","b","estimateCommentHtml","noTags","trim","splits","str","split","filter","d","words","estimate","estimateComment","time","commentArr","recAdd","push","body_html","calculateCommentList","timeInSeconds","mins","floor","hours","readableTime","c","PureComponent","justifyContent","Step","Group","render_TimeEstimator","children","foulSpanArray","findWithRegex","regex","contentBlock","callback","getText","matchArr","start","exec","index","decorators","strategy","forEach","reg","RegExp","component","Comment","constructor","p","propagateHtmlChange","html","stateToHTML","editor","getCurrentContent","onBlur","onStateChange","propagateEnableChange","inlineToolbarPlugin","createInlineToolbarPlugin","linkPlugin","createLinkPlugin","plugins","convertFromHTML","EditorState","createWithContent","ContentState","createFromBlockArray","contentBlocks","entityMap","handlePress","stopPropagation","componentWillUnmount","onKeyDown","color","marginRight","author","score","all_awardings","award","count","icon_url","src","alt","lib_default","editorState","InlineToolbar","extProps","draft_js_buttons_lib","LinkButton","Comment_Comment","toClass","classes","keys","join","SortableComments","onDragEnd","result","destination","reorder","source","react_beautiful_dnd_esm","droppableId","provided","droppableProps","innerRef","items","draggableId","draggableProps","dragHandleProps","draggable","setCurrent","setProcessed","bind","toggleCurrent","handleKeyEvent","fakecomments","createRef","code","goPrev","goNext","num","parseInt","addEventListener","removeEventListener","topComment","scrollTo","filt","recFilter","h","newS","chosen","has","set","add","commentNum","from","currentNum","reqComment","traverseOnce","i","toMinSec","seconds","fullMins","restSecs","calculateTotalTime","fullHtml","onCurrentCommentChange","s","onReorder","end","list","startIndex","endIndex","removed","splice","flexDirection","render_PickComments_SortableComments","flexGrow","paddingLeft","render_PickComments_Comment","padding","max","marginTop","setTitle","EditorComponent","createEmpty","selftext","setSelftext","setIncludeSelftext","onChangeSelftext","onChangeInclude","Checkbox","render_EditorComponent","beforeUnload","alignItems","paddingTop","marginLeft","basic","router_es","render_Navbar","path","ChooseThread","render_Question","SelfText","render_PickComments","render_Final","default","noThrow","voices","find","th","form","previewSong","delete","handleCheckboxChange","submit","success","removeFile","voice","step","volume","callToAction","translate","multiple","grouped","Field","inline","addingUser","editingUser","selectedUser","username","creditsToGive","createUser","closeAddModal","openAddModal","setMultiplier","closeEditModal","changeUserPass","giveCredits","openEditModal","Label","videoCount","Modal","onClose","Actions","Admin_UserList","passwordConfirm","changedPass","changePass","inputerror","NotFound","redirect","AdminPath","src_Dashboard","Support","src_BuyCredits","render_App","Logout_Logout","src_Account","Admin","App","login","redirectTo","height","maxWidth","views_Comment_Comment","NotFoundLogin","Register","Login","src_AuthedRouter","DefaultRouter","Boolean","hostname","ReactDOM","es","src_App","react_toastify","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0005b457.chunk.js","sourcesContent":["export const resetVideoState = (content) => ({\n    type: \"RESET_VIDEOSTATE\",\n    val: content,\n})\nexport const setProcessed = (content) => ({\n    type: \"SET_PROCESSED\",\n    val: content,\n})\nexport const setUser = (content) => ({\n    type: \"SET_USER\",\n    val: content,\n})\nexport const setUsers = (content) => ({\n    type: \"SET_USERS\",\n    val: content,\n})\nexport const setQuestion = (content) => ({\n    type: \"SET_QUESTION\",\n    val: content,\n})\nexport const setComments = (content) => ({\n    type: \"SET_COMMENTS\",\n    val: content,\n})\nexport const setTheme = (content) => ({\n    type: \"SET_THEME\",\n    val: content,\n})\nexport const setSong = (content) => ({\n    type: \"SET_SONG\",\n    val: content,\n})\nexport const setCredits = (content) => ({\n    type: \"SET_CREDITS\",\n    val: content,\n})\nexport const setThemes = (content) => ({\n    type: \"SET_THEMES\",\n    val: content,\n})\nexport const setSongs = (content) => ({\n    type: \"SET_SONGS\",\n    val: content,\n})\nexport const setVideos = (content) => ({\n    type: \"SET_VIDEOS\",\n    val: content,\n})\nexport const setTitle = (content) => ({\n    type: \"SET_TITLE\",\n    val: content,\n})\nexport const setSelftext = (content) => ({\n    type: \"SET_SELFTEXT\",\n    val: content,\n})\nexport const setIncludeSelftext = (content) => ({\n    type: \"SET_INCLUDE_SELFTEXT\",\n    val: content,\n})\nexport const login = () => ({\n    type: \"LOGIN\",\n})\nexport const logout = () => ({\n    type: \"LOGOUT\",\n})\n","import { createStore } from \"redux\"\n\nconst defaultState = {\n    // Video rendering\n    comments: [],\n    question: null,\n    processed: null,\n    song: null,\n    theme: null,\n\n    // Dashboard\n    credits: null,\n    themes: [],\n    videos: [],\n    songs: [],\n\n    user: {},\n\n    // If Admin\n    users: [],\n\n    loggedIn: localStorage.getItem(\"loggedIn\") === \"true\",\n}\n\nfunction state(state = defaultState, action) {\n    switch (action.type) {\n        case \"RESET_VIDEOSTATE\":\n            return {\n                ...state,\n                question: null,\n                processed: null,\n                comments: [],\n                theme: state.themes[0] ? state.themes[0]._id : undefined,\n                song: null,\n            }\n        case \"SET_COMMENTS\":\n            return Object.assign({}, state, {\n                comments: action.val,\n            })\n        case \"SET_USER\":\n            return Object.assign({}, state, {\n                user: action.val,\n            })\n        case \"SET_USERS\":\n            return Object.assign({}, state, {\n                users: action.val,\n            })\n        case \"SET_PROCESSED\":\n            return Object.assign({}, state, {\n                processed: action.val,\n            })\n        case \"SET_QUESTION\":\n            return Object.assign({}, state, {\n                question: action.val,\n            })\n        case \"SET_TITLE\": {\n            let question = Object.assign({}, state.question, {\n                title: action.val,\n            })\n            return Object.assign({}, state, {\n                question: question,\n            })\n        }\n        case \"SET_SELFTEXT\": {\n            let question = Object.assign({}, state.question, {\n                selftext_html: action.val,\n            })\n            return Object.assign({}, state, {\n                question,\n            })\n        }\n        case \"SET_INCLUDE_SELFTEXT\": {\n            let question = Object.assign({}, state.question, {\n                includeSelftext: action.val,\n            })\n            return Object.assign({}, state, {\n                question,\n            })\n        }\n        case \"SET_THEME\":\n            return Object.assign({}, state, {\n                theme: action.val,\n            })\n        case \"SET_SONG\":\n            return Object.assign({}, state, {\n                song: action.val,\n            })\n        case \"SET_CREDITS\":\n            return Object.assign({}, state, {\n                credits: action.val,\n            })\n        case \"SET_THEMES\":\n            return Object.assign({}, state, {\n                themes: action.val,\n            })\n        case \"SET_SONGS\":\n            return Object.assign({}, state, {\n                songs: action.val,\n            })\n        case \"SET_VIDEOS\":\n            return Object.assign({}, state, {\n                videos: action.val,\n            })\n        case \"LOGIN\":\n            localStorage.setItem(\"loggedIn\", \"true\")\n            return Object.assign({}, state, {\n                loggedIn: true,\n            })\n        case \"LOGOUT\":\n            localStorage.removeItem(\"loggedIn\")\n            return Object.assign({}, state, {\n                loggedIn: false,\n            })\n        default:\n            return state\n    }\n}\n\nexport default process.env.NODE_ENV === \"development\"\n    ? createStore(\n          state,\n          window.__REDUX_DEVTOOLS_EXTENSION__ &&\n              window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n    : createStore(state)\n","import {\n    login as loginAction,\n    logout as logoutAction,\n    setCredits as setCreditsAction,\n    setSongs as setSongsAction,\n    setThemes as setThemesAction,\n    setVideos as setVideosAction,\n    setQuestion,\n    setComments,\n    setUser,\n    setUsers,\n} from \"./redux/actions\"\nimport store from \"./redux/store\"\nimport { toast } from \"react-toastify\"\n\nlet apiurl =\n    process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:4001/api\"\n        : \"/api\"\n\n// The jsonFetch function is a wrapper around the native fetch().\n// It returns the response in json, and removes the \"loggedIn\" item\n// from localStorage if the response status code is 401.\n// Returns a promise that throws if the status code is not in the 200-399 range\nexport const jsonFetch = (RequestInfo, RequestInit = {}) => {\n    if (typeof RequestInfo === \"string\") {\n        RequestInfo = apiurl + RequestInfo\n    }\n    if (RequestInit.method && RequestInit.method !== \"GET\") {\n        if (!RequestInit.headers) {\n            RequestInit.headers = {\n                \"Content-Type\": \"application/json\",\n            }\n        }\n    }\n\n    RequestInit.credentials = \"include\"\n\n    return fetch(RequestInfo, RequestInit).then((res) => {\n        if (res.ok) {\n            return res.json()\n        } else if (res.status === 401) {\n            store.dispatch(logoutAction())\n        }\n        return res.json().then((err) => {\n            if (err && err.error) {\n                toast.error(err.error)\n            } else {\n                toast.error(\"Something went wrong, try again later\")\n            }\n            console.error(err)\n            throw err.error // Parse as json, then throw.\n        })\n    })\n}\n\n// ADMIN ROUTES\n\nexport let adminGetUsers = function () {\n    return jsonFetch(\"/admin/users\").then((data) => {\n        store.dispatch(setUsers(data))\n    })\n}\n\nexport let adminCreateUser = function (user) {\n    return jsonFetch(\"/admin/users\", {\n        method: \"POST\",\n        body: JSON.stringify(user),\n    })\n}\n\nexport let adminSetMultiplier = function (id, multiplier) {\n    return jsonFetch(`/admin/users/${id}/set-multiplier`, {\n        method: \"PUT\",\n        body: JSON.stringify({ multiplier }),\n    })\n}\n\nexport let adminChangePass = function (id, password) {\n    return jsonFetch(`/admin/users/${id}/change-password`, {\n        method: \"PUT\",\n        body: JSON.stringify({ password }),\n    })\n}\n\nexport let adminGiveCredits = function (id, quantity) {\n    return jsonFetch(`/admin/users/${id}/add-credits`, {\n        method: \"PUT\",\n        body: JSON.stringify({ quantity }),\n    })\n}\n\n// NORMAL ROUTES\n\nexport let getUser = function () {\n    return jsonFetch(\"/me\").then((data) => {\n        store.dispatch(setUser(data))\n    })\n}\n\nexport let changePassword = function (current, newPassword) {\n    return jsonFetch(\"/me/change-password\", {\n        method: \"POST\",\n        body: {\n            passwordCurrent: current,\n            passwordNew: newPassword,\n        },\n    })\n}\n\nexport let getCredits = function () {\n    return jsonFetch(\"/credits\").then((data) => {\n        store.dispatch(setCreditsAction(data.credits))\n        return data\n    })\n}\n\n// Returns { total: Number }\nexport let checkPrice = function (quantity) {\n    return jsonFetch(\"/credits/check-price\", {\n        method: \"POST\",\n        body: JSON.stringify({ quantity }),\n    })\n}\n\n// Use stripe to buy credits\n// Returns { session: String }\nexport let buyCredits = function (quantity) {\n    return jsonFetch(\"/credits/buy\", {\n        method: \"POST\",\n        body: JSON.stringify({ quantity }),\n    })\n}\n\nexport let getSongs = function () {\n    return jsonFetch(\"/songs\").then((songs) => {\n        store.dispatch(setSongsAction(songs))\n        return songs\n    })\n}\n\nexport let uploadSong = function (formData) {\n    return jsonFetch(\"/songs\", {\n        method: \"POST\",\n        body: formData,\n        headers: {},\n    }).then((r) => {\n        getSongs()\n        return r\n    })\n}\n\nexport let deleteSong = function (id) {\n    return jsonFetch(\"/songs/\" + id, {\n        method: \"DELETE\",\n    })\n}\n\nexport let getThread = function (thread, sort) {\n    return jsonFetch(`/thread/${thread}?sort=${sort}`).then((json) => {\n        let mapping = (comment) => {\n            let newcomment = Object.assign({}, comment)\n\n            if (Array.isArray(newcomment.replies)) {\n                newcomment.replies = newcomment.replies.map(mapping)\n            }\n\n            return {\n                enabled: false,\n                data: newcomment,\n            }\n        }\n\n        let comments = json[1].map(mapping)\n\n        store.dispatch(setQuestion(json[0]))\n        store.dispatch(setComments(comments))\n\n        return json\n    })\n}\n\nexport let getThemes = function () {\n    return jsonFetch(\"/themes\").then((themes) => {\n        store.dispatch(setThemesAction(themes))\n        return themes\n    })\n}\n\nexport let getTheme = function (themeId) {\n    return jsonFetch(\"/themes/\" + themeId)\n}\n\nexport let createTheme = function (data) {\n    return jsonFetch(\"/themes\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n    })\n}\n\nexport let editTheme = function (id, data) {\n    return jsonFetch(\"/themes/\" + id, {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n    })\n}\n\nexport let uploadThemeFiles = function (id, formData) {\n    return jsonFetch(\"/themes/\" + id + \"/files\", {\n        method: \"POST\",\n        body: formData,\n        headers: {},\n    })\n}\n\nexport let deleteTheme = function (id) {\n    return jsonFetch(\"/themes/\" + id, {\n        method: \"DELETE\",\n    })\n}\n\nexport let deleteThemeFile = function (\n    id,\n    body = { intro: false, transition: false, outro: false }\n) {\n    return jsonFetch(\"/themes/\" + id + \"/files\", {\n        method: \"DELETE\",\n        body: JSON.stringify(body),\n    })\n}\n\nexport let longPollVideo = function (fileId) {\n    return jsonFetch(\"/long-poll-video/\" + fileId)\n}\n\nexport let postPreview = function (theme, song) {\n    return jsonFetch(\"/preview\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            options: {\n                theme,\n                song,\n            },\n        }),\n    })\n}\n\nexport let postRender = function () {\n    let { question, processed, theme, song } = store.getState()\n\n    if (!question.includeSelftext) {\n        delete question.selftext_html\n    }\n\n    return jsonFetch(\"/videos\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            questionData: question,\n            commentData: processed,\n            options: {\n                theme,\n                song,\n            },\n        }),\n    })\n}\n\nexport let _postRender = function (state) {\n    let { questionData, commentData, options } = state\n\n    if (!questionData.includeSelftext) {\n        delete questionData.selftext_html\n    }\n\n    return jsonFetch(\"/videos\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            questionData,\n            commentData,\n            options,\n        }),\n    })\n}\n\nexport const getVideos = function () {\n    return jsonFetch(\"/videos\").then((r) => {\n        store.dispatch(setVideosAction(r))\n        return r\n    })\n}\n\nexport const openVideoLink = function (videoId) {\n    return window.open(\"/videos/\" + videoId, \"_blank\")\n}\n\n// btoa: Binary to Ascii (Base64 only contains ascii characters)\n\n// Basic toBase64(username:password)\nconst toBasicAuth = (user, pass) => `Basic ${btoa(user + \":\" + pass)}`\n\nexport let authorize = function (email, password) {\n    return jsonFetch(\"/auth\", {\n        headers: new Headers({\n            authorization: toBasicAuth(email, password),\n        }),\n        method: \"POST\",\n    }).then((r) => {\n        store.dispatch(loginAction())\n        return r\n    })\n}\n\nexport let register = function (email, password) {\n    return jsonFetch(\"/register\", {\n        body: JSON.stringify({ email, password }),\n        method: \"POST\",\n    })\n}\n\nexport let logout = function () {\n    return jsonFetch(\"/logout\").then((r) => {\n        store.dispatch(logoutAction())\n    })\n}\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Header, Segment, Loader } from \"semantic-ui-react\"\nimport { getCredits } from \"./api\"\n\nclass Credits extends React.Component {\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    componentDidMount() {\n        getCredits()\n    }\n    render() {\n        return (\n            <Segment textAlign=\"center\" secondary>\n                <Header size=\"huge\">\n                    <Header.Subheader>Your Credits</Header.Subheader>\n                    <Header.Content>\n                        {this.props.credits != null ? (\n                            this.props.credits\n                        ) : (\n                            <Loader active />\n                        )}\n                    </Header.Content>\n                </Header>\n            </Segment>\n        )\n    }\n}\n\nlet mapStateToProps = (store) => {\n    return {\n        credits: store.credits,\n    }\n}\n\nexport default connect(mapStateToProps)(Credits)\n","import React from \"react\"\nimport { Link } from \"@reach/router\"\nimport { connect } from \"react-redux\"\nimport { Menu, Dropdown } from \"semantic-ui-react\"\n\nclass FrontNav extends React.Component {\n    render() {\n        return (\n            <Menu>\n                <Menu.Item header>Reddit Video Maker</Menu.Item>\n                <Menu.Item as={Link} to=\"/\">\n                    Dashboard\n                </Menu.Item>\n                <Menu.Item as={Link} to=\"/support\">\n                    Contact us\n                </Menu.Item>\n                <Menu.Menu position=\"right\">\n                    <Dropdown item text=\"Account\">\n                        <Dropdown.Menu>\n                            <Dropdown.Item as={Link} to=\"/account\">\n                                My Account\n                            </Dropdown.Item>\n                            {this.props.user.isAdmin && (\n                                <Dropdown.Item as={Link} to=\"/admin\">\n                                    Admin\n                                </Dropdown.Item>\n                            )}\n                            <Dropdown.Item as={Link} to=\"/logout\">\n                                Log out\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Menu>\n            </Menu>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(FrontNav)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n    Container,\n    Form,\n    Grid,\n    Header,\n    Message,\n    Segment,\n} from \"semantic-ui-react\"\nimport { buyCredits, checkPrice } from \"../api\"\nimport Credits from \"../Credits\"\nimport FrontNav from \"../FrontNav\"\n\nlet stripekey =\n    process.env.NODE_ENV === \"production\"\n        ? \"pk_live_Dh8aRBNWH73HfNvlOVb4cOJE00eX9d9CAv\"\n        : \"pk_test_L7TCDB8LinfbSK3OzvaoaXEj00z2dt6HgK\"\n\nclass BuyCredits extends React.Component {\n    state = {\n        credits: 10,\n        custom: false,\n        currentPrice: null,\n        stripe: null,\n\n        timeout: null,\n        perCredit: null,\n    }\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    componentDidMount() {\n        // getCredits()\n        this.setState({ stripe: window.Stripe(stripekey) })\n        this.changeQuantity(null, { value: this.state.credits })\n    }\n    onPurchase = async () => {\n        let { session } = await buyCredits(this.state.credits)\n        this.state.stripe\n            .redirectToCheckout({\n                sessionId: session.id,\n            })\n            .then((res) => {\n                console.log(res)\n            })\n    }\n    changeQuantity = (_, { value }) => {\n        this.setState({ credits: value })\n\n        if (this.state.timeout !== null) {\n            clearTimeout(this.state.timeout)\n        }\n        let timeout = setTimeout(async () => {\n            let { total } = await checkPrice(value)\n            this.setState({\n                currentPrice: total,\n                perCredit: total / value,\n                timeout: null,\n            })\n        }, 200)\n        this.setState({ timeout })\n    }\n    render() {\n        return (\n            <Container>\n                <FrontNav />\n                <Credits />\n                <Grid>\n                    <Grid.Column>\n                        <Segment>\n                            <Header>Buy credits</Header>\n                            <Message>\n                                Credits are a one-time purchase. We do not save\n                                your payment information after your purchase.\n                            </Message>\n                            <p>One credit can be used to create one video.</p>\n                            <Form>\n                                <Form.Radio\n                                    name=\"credits\"\n                                    label=\"10 Credits\"\n                                    value={10}\n                                    checked={this.state.credits === 10}\n                                    onChange={this.changeQuantity}\n                                />\n                                <Form.Radio\n                                    name=\"credits\"\n                                    label=\"25 Credits\"\n                                    value={25}\n                                    checked={this.state.credits === 25}\n                                    onChange={this.changeQuantity}\n                                />\n                                <Form.Radio\n                                    name=\"credits\"\n                                    label=\"50 Credits\"\n                                    value={50}\n                                    checked={this.state.credits === 50}\n                                    onChange={this.changeQuantity}\n                                />\n                                <Form.Radio\n                                    name=\"credits\"\n                                    label=\"100 Credits\"\n                                    value={100}\n                                    checked={this.state.credits === 100}\n                                    onChange={this.changeQuantity}\n                                />\n                                <Form.Input\n                                    name=\"credits\"\n                                    label=\"Custom amount\"\n                                    value={this.state.credits}\n                                    onChange={this.changeQuantity}\n                                    type=\"number\"\n                                    min={1}\n                                />\n                                <Header>\n                                    <Header.Content>\n                                        €{this.state.currentPrice}\n                                    </Header.Content>\n                                    <Header.Subheader>\n                                        €\n                                        {Math.round(\n                                            this.state.perCredit * 100\n                                        ) / 100}\n                                        /Credit\n                                    </Header.Subheader>\n                                </Header>\n                                <Form.Button\n                                    onClick={this.onPurchase}\n                                    size=\"large\"\n                                >\n                                    Buy\n                                </Form.Button>\n                            </Form>\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = (store) => {\n    return {\n        credits: store.credits,\n    }\n}\n\nexport default connect(mapStateToProps)(BuyCredits)\n","import React from \"react\"\nimport { Button, Icon, Input } from \"semantic-ui-react\"\n\nclass FileInput extends React.Component {\n    render() {\n        let buttonOnly = this.props.buttonOnly\n\n        let button = (\n            <Button\n                icon={!this.props.label}\n                style={{ position: \"relative\" }}\n                onClick={() => this.fileInput.click()}\n            >\n                <input\n                    name={this.props.name}\n                    type=\"file\"\n                    accept={this.props.accept || null}\n                    ref={(r) => (this.fileInput = r)}\n                    style={{ display: \"none\" }}\n                    onChange={this.props.onChange}\n                />\n                <Icon name={this.props.icon || \"file\"} size={this.props.size} />\n                {this.props.label && this.props.label}\n            </Button>\n        )\n        return buttonOnly ? (\n            button\n        ) : (\n            <Input\n                {...this.props}\n                placeholder={this.props.placeholder || \"No file\"}\n                value={this.props.file ? this.props.file.name : \"\"}\n                label={button}\n                labelPosition=\"left\"\n                readOnly={true}\n                size={this.props.size}\n                onClick={() => this.fileInput.click()}\n            />\n        )\n    }\n}\n\nexport default FileInput\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Container, Divider, Icon, List, Loader } from \"semantic-ui-react\"\nimport { deleteSong, getSongs, uploadSong } from \"../api\"\nimport FileInput from \"../FileInput\"\nimport \"./index.css\"\n\nclass ThemesList extends React.Component {\n    uploadSong = async (e) => {\n        let file = e.target.files[0]\n        let formData = new FormData()\n        formData.append(\"song\", file)\n        await uploadSong(formData)\n    }\n    deleteSong = async (song) => {\n        await deleteSong(song._id)\n        getSongs()\n    }\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    handleFileChange = (e, { name }) =>\n        this.setState({ [name]: e.target.files[0] })\n    componentDidMount() {\n        getSongs()\n    }\n    render() {\n        return (\n            <Container textAlign=\"left\">\n                <List relaxed verticalAlign=\"middle\">\n                    {this.props.songs ? (\n                        this.props.songs.map((song) => (\n                            <List.Item className=\"song-item\" key={song._id}>\n                                <List.Content\n                                    className=\"song-icon\"\n                                    floated=\"right\"\n                                    as=\"a\"\n                                    onClick={() => this.deleteSong(song)}\n                                    title=\"Delete song\"\n                                >\n                                    <Icon name=\"delete\" />\n                                </List.Content>\n                                <List.Content>\n                                    <List.Header>\n                                        {song.file.origname}\n                                    </List.Header>\n                                </List.Content>\n                            </List.Item>\n                        ))\n                    ) : (\n                        <Loader active />\n                    )}\n                </List>\n                <Divider></Divider>\n\n                <FileInput\n                    icon=\"music\"\n                    accept=\"audio/*\"\n                    buttonOnly\n                    name=\"song\"\n                    label=\"Upload song\"\n                    onChange={this.uploadSong}\n                />\n                {/* <Popup trigger={<Button>Upload song</Button>}\n                    on=\"click\"\n                    position=\"bottom center\">\n                    <Container fluid textAlign=\"center\">\n                        <Form onSubmit={this.uploadSong}>\n                            <Header>Upload song</Header>\n                            <Form.Input name=\"name\" onChange={this.handleChange} placeholder=\"Name\" />\n                            <Form.Button type=\"submit\">Upload</Form.Button>\n                            <Message size=\"tiny\" color=\"yellow\">\n                                Songs that are too short will be repeated\n                            </Message>\n                        </Form>\n                    </Container>\n                </Popup> */}\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = (store) => {\n    return {\n        songs: store.songs,\n    }\n}\n\nexport default connect(mapStateToProps)(ThemesList)\n","import { navigate } from \"@reach/router\"\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n    Button,\n    Container,\n    Divider,\n    Form,\n    Header,\n    List,\n    Loader,\n    Popup,\n} from \"semantic-ui-react\"\nimport { createTheme, getThemes } from \"../api\"\n\nclass ThemesList extends React.Component {\n    createTheme = async () => {\n        const { theme } = await createTheme({ name: this.state.name })\n        navigate(`/themes/${theme}`)\n    }\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    componentDidMount() {\n        getThemes()\n    }\n    render() {\n        return (\n            <Container textAlign=\"left\">\n                <List selection>\n                    {this.props.themes ? (\n                        this.props.themes.length > 0 ? (\n                            this.props.themes.map((theme) => (\n                                <List.Item\n                                    key={theme._id}\n                                    onClick={() =>\n                                        navigate(\"/themes/\" + theme._id)\n                                    }\n                                >\n                                    {/* <Link to={\"/themes/\" + theme._id}> */}\n                                    <List.Content>\n                                        <List.Header>{theme.name}</List.Header>\n                                    </List.Content>\n                                    {/* </Link> */}\n                                </List.Item>\n                            ))\n                        ) : (\n                            <p>\n                                You need to create a theme to get started. Click\n                                \"New theme\" below\n                            </p>\n                        )\n                    ) : (\n                        <Loader active />\n                    )}\n                </List>\n                <Divider></Divider>\n                <Popup\n                    trigger={<Button>New theme</Button>}\n                    on=\"click\"\n                    position=\"bottom center\"\n                >\n                    <Container fluid textAlign=\"center\">\n                        <Form onSubmit={this.createTheme}>\n                            <Header>Create new theme</Header>\n                            <Form.Input\n                                name=\"name\"\n                                onChange={this.handleChange}\n                                placeholder=\"Name\"\n                            ></Form.Input>\n                            <Form.Button type=\"submit\">Create</Form.Button>\n                        </Form>\n                    </Container>\n                </Popup>\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = (store) => {\n    return {\n        themes: store.themes,\n    }\n}\n\nexport default connect(mapStateToProps)(ThemesList)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Container, List, Loader } from \"semantic-ui-react\"\nimport { getVideos, jsonFetch } from \"./api\"\n\nfunction formatDate(date) {\n    let datePad = (date) => (\"0\" + date).slice(-2)\n    let jsdate = new Date(date)\n    return `${jsdate.getFullYear()}-${datePad(jsdate.getMonth() + 1)}-${datePad(\n        jsdate.getDate()\n    )} ${datePad(jsdate.getHours())}:${datePad(jsdate.getMinutes())}`\n}\n\nclass VideosList extends React.Component {\n    componentDidMount() {\n        getVideos()\n    }\n    getVideos = () => {\n        return isNaN(this.props.limit)\n            ? this.props.videos\n            : this.props.videos.slice(0, this.props.limit)\n    }\n    retry = async (videoId) => {\n        await jsonFetch(\"/videos\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                rerenderVideo: videoId,\n            }),\n        })\n        window.location.reload()\n    }\n    render() {\n        return (\n            <Container>\n                <List selection>\n                    {this.props.videos ? (\n                        this.getVideos().map((video) => {\n                            const Item = (props) =>\n                                video.failed ? (\n                                    <List.Item\n                                        key={video._id}\n                                        onClick={() => this.retry(video._id)}\n                                        style={{ cursor: \"pointer\" }}\n                                        {...props}\n                                    />\n                                ) : (\n                                    <List.Item\n                                        disabled={!video.finished}\n                                        key={video._id}\n                                        as=\"a\"\n                                        href={\"/api/videos/\" + video.file}\n                                        {...props}\n                                    />\n                                )\n                            return (\n                                <Item>\n                                    <List.Content>\n                                        <List.Header>\n                                            {video.name || \"Unnamed video\"}\n                                        </List.Header>\n                                        <List.Description>\n                                            {video.failed\n                                                ? \"Failed rendering, click to retry\"\n                                                : video.finished\n                                                ? formatDate(video.finished)\n                                                : \"Rendering...\"}\n                                        </List.Description>\n                                    </List.Content>\n                                </Item>\n                            )\n                        })\n                    ) : (\n                        <List.Item>\n                            <Loader active />\n                        </List.Item>\n                    )}\n                </List>\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = (store) => {\n    return {\n        videos: store.videos,\n    }\n}\n\nexport default connect(mapStateToProps)(VideosList)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Form, Header } from \"semantic-ui-react\"\nimport { longPollVideo, postPreview, getVideos } from \"./api\"\nimport { toast } from \"react-toastify\"\n\nclass Preview extends React.Component {\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    state = {\n        song: null,\n        theme: null,\n        rendering: false,\n    }\n    preview = () => {\n        this.setState({ rendering: true })\n\n        postPreview(this.state.theme, this.state.song)\n            .then((res) => {\n                getVideos()\n                return longPollVideo(res.file)\n            })\n            .then((res) => {\n                toast.info(\"Preview is ready\", {\n                    onClick: () => window.open(res.url, \"_blank\"),\n                })\n            })\n    }\n    render() {\n        let songOptions = this.props.songs.map((song) => ({\n            value: song._id,\n            key: song._id,\n            text: song.file.origname,\n        }))\n        let themeOptions = this.props.themes.map((theme) => ({\n            value: theme._id,\n            key: theme._id,\n            text: theme.name,\n        }))\n        songOptions.unshift({ value: null, key: \"\", text: \"No song\" })\n        return (\n            <Form>\n                <Header>Preview</Header>\n                <p>\n                    You can render a preview of a theme and song. It will take\n                    about 20 seconds to render, and will not cost any credits.\n                    It will show up in your videos.{\" \"}\n                </p>\n                <Form.Select\n                    label=\"Theme\"\n                    required\n                    disabled={this.state.rendering}\n                    placeholder=\"Select a theme\"\n                    value={this.props.theme}\n                    name=\"theme\"\n                    options={themeOptions}\n                    onChange={this.handleChange}\n                />\n                <Form.Select\n                    label=\"Song\"\n                    clearable\n                    disabled={this.state.rendering}\n                    placeholder=\"No song\"\n                    value={this.props.song}\n                    name=\"song\"\n                    options={songOptions}\n                    onChange={this.handleChange}\n                />\n                <Form.Button\n                    disabled={this.state.rendering || !this.state.theme}\n                    onClick={this.preview}\n                >\n                    Preview\n                </Form.Button>\n            </Form>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    songs: state.songs,\n    themes: state.themes,\n})\n\nexport default connect(mapStateToProps)(Preview)\n","import { Link } from \"@reach/router\"\nimport React from \"react\"\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Segment,\n} from \"semantic-ui-react\"\nimport Songs from \"../Songs\"\nimport Themes from \"../Themes/index\"\nimport Videos from \"../Videos\"\nimport Credits from \"../Credits\"\nimport FrontNav from \"../FrontNav\"\nimport Preview from \"../Preview\"\n\nclass Dashboard extends React.Component {\n    render() {\n        return (\n            <Container>\n                <FrontNav />\n                <Header textAlign=\"center\" as=\"h1\">\n                    Dashboard\n                </Header>\n                <Grid stackable>\n                    <Grid.Column width={8}>\n                        <Divider horizontal>Credits</Divider>\n                        <Segment>\n                            <Credits />\n                            <Button as={Link} to=\"/buy-credits\">\n                                Get more credits\n                            </Button>\n                        </Segment>\n                        <Divider horizontal>Videos</Divider>\n                        <Segment>\n                            <Videos limit={20} />\n                            <Divider />\n                            <Button as={Link} to=\"/video\">\n                                Make video\n                            </Button>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column width={8}>\n                        <Divider horizontal>Themes</Divider>\n                        <Segment>\n                            <Themes />\n                        </Segment>\n                        <Divider horizontal>Songs</Divider>\n                        <Segment>\n                            <Songs />\n                        </Segment>\n                        <Divider horizontal>Preview</Divider>\n                        <Segment>\n                            <Preview />\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default Dashboard\n","import React from \"react\"\nimport { logout } from \"./api\"\nimport { navigate } from \"@reach/router\"\n\nexport default class Logout extends React.Component {\n    componentWillMount() {\n        this.logout()\n    }\n    logout() {\n        logout().then((r) => {\n            navigate(\"/login\", { replace: true })\n        })\n    }\n    render() {\n        return <></>\n    }\n}\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Form } from \"semantic-ui-react\"\nimport { setSong, setTheme } from \"../redux/actions\"\n\nclass Settings extends Component {\n    handleTheme = (e, { value }) => {\n        this.props.setTheme(value)\n    }\n    handleSong = (e, { value }) => {\n        this.props.setSong(value)\n    }\n    render() {\n        let themeOptions = this.props.themes.map((theme) => ({\n            value: theme._id,\n            key: theme._id,\n            text: theme.name,\n        }))\n        let songOptions = this.props.songs.map((song) => ({\n            value: song._id,\n            key: song._id,\n            text: song.file.origname,\n        }))\n        songOptions.unshift({ value: null, key: \"\", text: \"No song\" })\n\n        return (\n            <Form onSubmit={this.props.onSubmit}>\n                <Form.Select\n                    label=\"Theme\"\n                    required\n                    placeholder=\"Select a theme\"\n                    value={this.props.theme}\n                    name=\"theme\"\n                    options={themeOptions}\n                    onChange={this.handleTheme}\n                />\n                <Form.Select\n                    label=\"Song\"\n                    clearable\n                    placeholder=\"No song\"\n                    value={this.props.song}\n                    name=\"song\"\n                    options={songOptions}\n                    onChange={this.handleSong}\n                />\n            </Form>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        theme: state.theme,\n        song: state.song,\n        themes: state.themes,\n        songs: state.songs,\n    }),\n    { setTheme, setSong }\n)(Settings)\n","import { navigate } from \"@reach/router\"\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Divider, Form, Icon, Message, Segment } from \"semantic-ui-react\"\nimport { getThread } from \"../api\"\nimport { setComments, setQuestion, resetVideoState } from \"../redux/actions\"\nimport Settings from \"./Settings\"\n\nclass Thread extends React.Component {\n    state = {\n        input: \"\",\n        sort: \"top\",\n        loading: null,\n        error: null,\n    }\n    componentWillMount() {\n        this.props.resetVideoState()\n    }\n    fetchThread = (thread, sort) => {\n        this.setState({ error: null, loading: true })\n\n        getThread(thread, sort)\n            .then(() => {\n                this.setState({ loading: false })\n                navigate(\"/video/post\")\n            })\n            .catch((err) => {\n                this.setState({ error: err, loading: false })\n            })\n    }\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        let thread = this.state.input\n\n        if (thread.indexOf(\"comments\") !== -1) {\n            let pattern = /\\/comments\\/([\\w]+)/\n            let match = thread.match(pattern)\n\n            if (match) {\n                thread = match[1]\n            }\n        }\n\n        let onlythread = thread.replace(/[^\\w\\d]/g, \"\")\n\n        this.fetchThread(onlythread, this.state.sort)\n    }\n    handle = (e, { name, value }) => this.setState({ [name]: value })\n    render() {\n        let sortOptions = [\n            { text: \"Top\", value: \"top\" },\n            { text: \"Best\", value: \"best\" },\n            { text: \"New\", value: \"new\" },\n        ]\n        return (\n            <Segment>\n                <Settings />\n                <Divider />\n                <Form onSubmit={this.onSubmit}>\n                    <Form.Input\n                        label=\"Thread\"\n                        required\n                        value={this.state.input}\n                        onChange={this.handle}\n                        name=\"input\"\n                        placeholder=\"Type a reddit thread ID or paste its URL\"\n                        autoFocus\n                    />\n                    <Form.Select\n                        label=\"Sort by\"\n                        required\n                        value={this.state.sort}\n                        onChange={this.handle}\n                        name=\"sort\"\n                        options={sortOptions}\n                    />\n                    <Form.Button\n                        primary\n                        loading={this.state.loading}\n                        disabled={!this.props.theme || !this.state.input}\n                    >\n                        OK\n                        <Icon name=\"angle right\" />\n                    </Form.Button>\n                    {this.state.error && (\n                        <Message negative>{this.state.error}</Message>\n                    )}\n                </Form>\n            </Segment>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        theme: state.theme,\n    }),\n    {\n        setComments,\n        setQuestion,\n        resetVideoState,\n    }\n)(Thread)\n","import React, { Component } from \"react\"\nimport { Button, Divider, Segment } from \"semantic-ui-react\"\nimport { postRender } from \"../api\"\nimport Settings from \"./Settings\"\n\nclass Final extends Component {\n    state = { loading: false, done: false }\n    send = async () => {\n        this.setState({ loading: true, done: false })\n        await postRender()\n        this.setState({ loading: false, done: true })\n    }\n    render() {\n        return (\n            <Segment>\n                {this.state.done ? (\n                    <p>The video is now rendering.</p>\n                ) : (\n                    <>\n                        <p>\n                            Change settings if needed and then send to render\n                            video.\n                        </p>\n                        <Settings />\n                        <Divider />\n                        <Button\n                            primary\n                            size=\"large\"\n                            loading={this.state.loading}\n                            onClick={this.send}\n                        >\n                            Render\n                        </Button>\n                    </>\n                )}\n            </Segment>\n        )\n    }\n}\n\nexport default Final\n","// ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 transition.mkv\n\n// Outro 13.163 s\n// Transition bright 0.843 s\n// Transition 0.741 s\n// Number of splits * X\n// Number of words * Y\n\nlet outroLen = 13.163\nlet transitionLen = 0.741\n\nfunction splitString(str) {\n    return str\n        .split(/<br>|(.+?[\\.,?!]+[\"'\\)\\s]+)/g) // eslint-disable-line no-useless-escape\n        .filter((d) => d.replace(\"\\u200B\", \" \").trim().length > 0)\n}\n\nexport function getFull(commentTimes) {\n    let comments = commentTimes.reduce((a, b) => a + b, 0)\n    return comments + outroLen + transitionLen * commentTimes.length\n}\n\nexport function estimateComment(splits, words) {\n    return (splits * 0.38152203637725923 + words * 0.2767486833003453) * 0.98\n}\n\nexport function estimateCommentHtml(comment) {\n    let noTags = comment.replace(/<.+?>/g, \"\").trim()\n    let splits = splitString(noTags).length\n    let words = noTags.replace(/<.+?>/g, \"\").split(/\\s+/g).length\n    let estimate = estimateComment(splits, words)\n\n    return {\n        words,\n        splits,\n        estimate,\n    }\n}\n\nexport function calculateCommentList(commentArr) {\n    let total = []\n    let recAdd = (comment) => {\n        total.push(estimateCommentHtml(comment.data.body_html).estimate)\n\n        if (Array.isArray(comment.data.replies)) {\n            comment.data.replies.filter((r) => r.enabled).map(recAdd)\n        }\n    }\n    commentArr.filter((d) => d.enabled).map(recAdd)\n\n    return Math.round(1e2 * getFull(total)) / 1e2\n}\n","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Header } from \"semantic-ui-react\"\nimport { calculateCommentList, estimateCommentHtml } from \"./estimate\"\n\nfunction readableTime(timeInSeconds) {\n    let mins = Math.floor(timeInSeconds / 60)\n    let hours = Math.floor(mins / 60)\n    mins -= hours * 60\n\n    let seconds = Math.floor(timeInSeconds) - mins * 60 - hours * 60\n\n    let str = \"\"\n    if (hours > 0) {\n        str += hours + \" h, \"\n    }\n    if (mins > 0) {\n        str += mins + \" m, \"\n    }\n    str += seconds + \" s\"\n\n    return str\n}\n\nclass TimeEstimator extends Component {\n    render() {\n        let time = calculateCommentList(this.props.comments)\n\n        if (\n            this.props.question.includeSelftext &&\n            this.props.question.selftext_html\n        ) {\n            let selftext = this.props.question.selftext_html\n            time += estimateCommentHtml(selftext).estimate\n        }\n\n        return (\n            <div>\n                <Header>\n                    <Header.Content>\n                        Estimated video length: {readableTime(time)}\n                    </Header.Content>\n                </Header>\n                Comments selected:{\" \"}\n                {this.props.comments.filter((c) => c.enabled).length}\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => ({\n    comments: state.comments,\n    question: state.question,\n}))(TimeEstimator)\n","import { Link } from \"@reach/router\"\nimport React from \"react\"\nimport { Header, Step } from \"semantic-ui-react\"\nimport TimeEstimator from \"./TimeEstimator\"\nimport { connect } from \"react-redux\"\n\nclass Navbar extends React.PureComponent {\n    render() {\n        return (\n            <div>\n                {this.props.question && (\n                    <div style={{ textAlign: \"center\" }}>\n                        <div\n                            style={{\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <Step.Group>\n                                <Step\n                                    active={this.props[\"*\"] === \"post\"}\n                                    as={Link}\n                                    to=\"post\"\n                                >\n                                    Question title\n                                </Step>\n                                <Step\n                                    active={this.props[\"*\"] === \"selftext\"}\n                                    as={Link}\n                                    to=\"selftext\"\n                                >\n                                    Body text\n                                </Step>\n                                <Step\n                                    active={this.props[\"*\"] === \"comments\"}\n                                    as={Link}\n                                    to=\"comments\"\n                                >\n                                    Comments\n                                </Step>\n                                <Step\n                                    active={this.props[\"*\"] === \"final\"}\n                                    as={Link}\n                                    to=\"final\"\n                                >\n                                    Finish\n                                </Step>\n                            </Step.Group>\n                        </div>\n                        <TimeEstimator />\n                        <Header as=\"h2\">{this.props.question.title}</Header>\n                    </div>\n                )}\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => ({\n    question: state.question,\n}))(Navbar)\n","// These will hide the middle of the three regex groups\nexport const foulSpanArray = [\n    /(f)(uck)()/,\n    /(sh)(it)()/,\n    /(b)(it)(ch)/,\n    /(c)(un)(t)/,\n    /(ni)(gg)(a)/,\n    /(ni)(gge)(r)/,\n    /(p)(o)(rn)/,\n    /((?:\\W|^)d)(ic)(k)/,\n    /((?:\\W|^)a)(ss)(es)(?!\\w)/,\n    /((?:\\W|^)a)(ss)(\\W|$)/,\n    /((?:\\W|^)r)(ap)(e|ist|ing)/,\n    /((?:\\W|^)c)(u)(m)/,\n    /((?:\\W|^)t)(i)(ts)/,\n    /(t)(it)(ties)/,\n    /(c)(o)(ck[^an])/, // doesnt match 'cockney', 'cockatrice'\n    /(wh)(or)(e)/,\n    /(p)(us)(sy)/,\n    /(s)(e)(x)/,\n    /(d)(ic)(k)/,\n    /(ret)(ar)(d)/,\n    /(a)(ss)(hat|face|head|burger|hole)/,\n    /((?:\\W|^)a)(n)(al[^oy])/,\n    /(pe)(n)(is)/,\n    /(va)(gi)(na)/,\n    /(dr)(u)(gs)/,\n    /(mast)(urb)(at)/,\n    /(dr)(u)(gs)/,\n]\n","import React from \"react\"\nimport { EditorState, ContentState, convertFromHTML } from \"draft-js\"\nimport Editor from \"draft-js-plugins-editor\"\nimport { stateToHTML } from \"draft-js-export-html\"\nimport { foulSpanArray } from \"../sanitize\"\nimport createLinkPlugin from \"draft-js-anchor-plugin\"\nimport createInlineToolbarPlugin from \"draft-js-inline-toolbar-plugin\"\nimport { ItalicButton, BoldButton, UnderlineButton } from \"draft-js-buttons\"\n\nimport \"./Comment.css\"\n\nfunction handleStrategy(contentBlock, callback) {\n    foulSpanArray.forEach((reg) => {\n        findWithRegex(new RegExp(reg, \"ig\"), contentBlock, callback)\n    })\n}\n\nfunction editStrategy(contentBlock, callback) {\n    findWithRegex(/(?:^|\\W)edit/gim, contentBlock, callback)\n}\n\nlet handleSpan = (props) => {\n    return <span className=\"highlight-danger\">{props.children}</span>\n}\n\nlet editSpan = (props) => {\n    return <span className=\"highlight-warn\">{props.children}</span>\n}\n\nfunction findWithRegex(regex, contentBlock, callback) {\n    const text = contentBlock.getText()\n    let matchArr, start\n    while ((matchArr = regex.exec(text)) !== null) {\n        start = matchArr.index\n        callback(start, start + matchArr[0].length)\n    }\n}\n\nlet decorators = [\n    {\n        strategy: handleStrategy,\n        component: handleSpan,\n    },\n    {\n        strategy: editStrategy,\n        component: editSpan,\n    },\n]\n\nclass Comment extends React.Component {\n    constructor(p) {\n        super(p)\n\n        this.inlineToolbarPlugin = createInlineToolbarPlugin()\n        this.linkPlugin = createLinkPlugin()\n        this.plugins = [this.inlineToolbarPlugin, this.linkPlugin]\n\n        let d = convertFromHTML(p.comment.data.body_html)\n        this.state = {\n            editor: EditorState.createWithContent(\n                ContentState.createFromBlockArray(d.contentBlocks, d.entityMap)\n            ),\n        }\n    }\n    handlePress(e) {\n        e.stopPropagation()\n    }\n    propagateHtmlChange = () => {\n        let html = stateToHTML(this.state.editor.getCurrentContent())\n\n        this.props.comment.data.body_html = html\n\n        this.props.onChange()\n    }\n    onBlur = (e) => {\n        this.propagateHtmlChange()\n    }\n    onStateChange = (editor) => this.setState({ editor })\n    propagateEnableChange = () => {\n        this.props.comment.enabled = !this.props.comment.enabled\n        this.props.onChange()\n    }\n    componentWillUnmount() {\n        this.propagateHtmlChange()\n    }\n    render() {\n        let { comment, onChange } = this.props\n\n        return (\n            <div className=\"Comment\">\n                <input\n                    className=\"left-box\"\n                    type=\"checkbox\"\n                    checked={comment.enabled}\n                    onChange={this.propagateEnableChange}\n                />\n                <div onKeyDown={this.handlePress}>\n                    <div onClick={this.propagateEnableChange}>\n                        <span style={{ color: \"blue\", marginRight: 5 }}>\n                            {comment.data.author}\n                        </span>\n                        <span>\n                            {comment.data.score >= 1e3\n                                ? Math.round(comment.data.score / 1e2) / 1e1 +\n                                  \"k\"\n                                : comment.data.score}{\" \"}\n                            points\n                        </span>\n                        <span>\n                            {comment.data.all_awardings.map((award) => (\n                                <span key={award.count + award.icon_url}>\n                                    <img\n                                        src={award.icon_url}\n                                        alt=\"award\"\n                                        width={16}\n                                    />\n                                    {award.count > 1 && award.count}\n                                </span>\n                            ))}\n                        </span>\n                    </div>\n                    <Editor\n                        editorState={this.state.editor}\n                        onChange={this.onStateChange}\n                        onBlur={this.onBlur}\n                        decorators={decorators}\n                        plugins={this.plugins}\n                    />\n                    <this.inlineToolbarPlugin.InlineToolbar>\n                        {(extProps) => (\n                            <>\n                                <BoldButton {...extProps} />\n                                <ItalicButton {...extProps} />\n                                <UnderlineButton {...extProps} />\n                                <this.linkPlugin.LinkButton {...extProps} />\n                            </>\n                        )}\n                    </this.inlineToolbarPlugin.InlineToolbar>\n                    {Array.isArray(comment.data.replies) &&\n                        comment.data.replies.map((d) => (\n                            <Comment\n                                key={d.data.id}\n                                comment={d}\n                                onChange={onChange}\n                            />\n                        ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Comment\n","import React from \"react\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\nimport \"./SortableComments.css\"\n\nlet toClass = (classes) =>\n    Object.keys(classes)\n        .filter((d) => classes[d])\n        .join(\" \")\n\nclass SortableComments extends React.Component {\n    onDragEnd = (result) => {\n        if (!result.destination) {\n            return\n        }\n\n        this.props.reorder(result.source.index, result.destination.index)\n    }\n    render() {\n        return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <Droppable droppableId=\"droppable\">\n                    {(provided) => (\n                        <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                            className=\"draggable-container\"\n                        >\n                            {this.props.items.map((item, index) => (\n                                <Draggable\n                                    key={item.data.id}\n                                    draggableId={item.data.id}\n                                    index={index}\n                                >\n                                    {(provided) => (\n                                        <div\n                                            ref={provided.innerRef}\n                                            {...provided.draggableProps}\n                                            {...provided.dragHandleProps}\n                                            className={toClass({\n                                                draggable: true,\n                                                current:\n                                                    this.props.current ===\n                                                    index,\n                                                enabled: item.enabled,\n                                            })}\n                                            onClick={() =>\n                                                this.props.setCurrent(index)\n                                            }\n                                        >\n                                            {index + 1}\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        )\n    }\n}\n\nexport default SortableComments\n","import { navigate } from \"@reach/router\"\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport { setComments, setProcessed } from \"../../redux/actions\"\nimport { estimateCommentHtml, getFull } from \"../estimate\"\nimport Comment from \"./Comment\"\nimport SortableComments from \"./SortableComments\"\nimport {\n    Segment,\n    Container,\n    Header,\n    Button,\n    Input,\n    Icon,\n} from \"semantic-ui-react\"\n\nfunction recFilter(commentArr) {\n    let news = commentArr\n        .filter((h) => h.enabled)\n        .map((d) => d.data)\n        .map((d) => {\n            let newS = Object.assign({}, d)\n            if (newS.replies) {\n                newS.replies = recFilter(newS.replies)\n            }\n            return newS\n        })\n    return news\n}\n\nclass PickComments extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { current: 0 }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.handle = this.handle.bind(this)\n        this.toggleCurrent = this.toggleCurrent.bind(this)\n        this.handleKeyEvent = this.handleKeyEvent.bind(this)\n\n        this.fakecomments = React.createRef()\n    }\n    handleKeyEvent(e) {\n        switch (e.code) {\n            case \"KeyA\":\n            case \"ArrowLeft\":\n                this.goPrev()\n                break\n            case \"KeyD\":\n            case \"ArrowRight\":\n                this.goNext()\n                break\n            case \"Enter\":\n                this.onSubmit()\n                break\n            default:\n                if (e.code.indexOf(\"Digit\") === 0) {\n                    let num = parseInt(e.code.replace(\"Digit\", \"\"))\n                    this.toggleCurrent(num)\n                }\n        }\n    }\n    componentDidMount() {\n        window.addEventListener(\"keydown\", this.handleKeyEvent)\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"keydown\", this.handleKeyEvent)\n\n        this.setProcessed()\n    }\n    goPrev() {\n        if (this.state.current > 0) {\n            this.topComment.scrollTo(0, 0)\n            this.setState({ current: this.state.current - 1 })\n        }\n    }\n    goNext() {\n        if (this.state.current < this.props.comments.length - 1) {\n            this.topComment.scrollTo(0, 0)\n            this.setState({ current: this.state.current + 1 })\n        }\n    }\n    setProcessed() {\n        let filt = recFilter(this.props.comments)\n\n        this.props.setProcessed(filt)\n        console.log(filt)\n    }\n    onSubmit() {\n        navigate(\"/video/final\")\n    }\n    handle(id) {\n        if (this.state.chosen.has(id)) {\n            this.state.chosen.set(id)\n        } else {\n            this.state.chosen.add(id)\n        }\n        this.setState({\n            chosen: this.state.chosen,\n        })\n    }\n    toggleCurrent(commentNum) {\n        let set = Array.from(this.props.comments)\n\n        if (commentNum) {\n            let currentNum = 0\n\n            // Used for checking the N:th visible comment in the tree\n            function traverseOnce(comment) {\n                currentNum++\n                if (currentNum === commentNum) {\n                    return comment\n                }\n                if (Array.isArray(comment.data.replies)) {\n                    for (let i = 0; i < comment.data.replies.length; i++) {\n                        const element = comment.data.replies[i]\n                        let res = traverseOnce(element)\n                        if (res) {\n                            return res\n                        }\n                    }\n                }\n            }\n\n            let reqComment = traverseOnce(set[this.state.current])\n            if (!reqComment) {\n                return // Could not find a comment with inputted number\n            }\n            reqComment.enabled = !reqComment.enabled\n        } else {\n            set[this.state.current].enabled = !set[this.state.current].enabled\n        }\n\n        this.props.setComments(set)\n    }\n    toMinSec(seconds) {\n        let fullMins = Math.floor(seconds / 60) // No. full mins\n        let restSecs = (\"00\" + Math.round(seconds - 60 * fullMins)).slice(-2)\n        let mins = (\"00\" + fullMins).slice(-2)\n        return `${mins}:${restSecs}`\n    }\n    calculateTotalTime() {\n        let recAdd = (comment) => {\n            let fullHtml = comment.data.body_html\n\n            if (Array.isArray(comment.data.replies)) {\n                fullHtml += comment.data.replies\n                    .filter((r) => r.enabled)\n                    .map(recAdd)\n                    .reduce((a, b) => a + b, \"\")\n            }\n\n            return fullHtml\n        }\n        let commentTimes = this.props.comments\n            .filter((d) => d.enabled)\n            .map(recAdd)\n            .map((b) => estimateCommentHtml(b).estimate)\n\n        return Math.round(1e2 * getFull(commentTimes)) / 1e2\n    }\n    onCurrentCommentChange(comment) {\n        let s = Array.from(this.props.comments)\n        this.props.setComments(s)\n    }\n    onReorder(start, end) {\n        const reorder = (list, startIndex, endIndex) => {\n            const result = Array.from(list)\n            const [removed] = result.splice(startIndex, 1)\n            result.splice(endIndex, 0, removed)\n\n            return result\n        }\n\n        this.props.setComments(reorder(this.props.comments, start, end))\n\n        let current = this.state.current\n\n        if (current === start) {\n            this.setState({ current: end })\n        } else if (current < start && current > end) {\n            this.setState({ current: current + 1 })\n        } else if (current > start && current < end) {\n            this.setState({ current: current - 1 })\n        }\n    }\n    render() {\n        if (this.props.comments.length === 0) {\n            return (\n                <Container>\n                    <Header>No comments found for this thread</Header>\n                </Container>\n            )\n        }\n        let comment = this.props.comments[this.state.current]\n\n        return (\n            <Container>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <SortableComments\n                        setCurrent={(i) => this.setState({ current: i })}\n                        current={this.state.current}\n                        reorder={this.onReorder.bind(this)}\n                        items={this.props.comments}\n                    />\n                    <div style={{ flexGrow: 1, paddingLeft: 10 }}>\n                        <Segment>\n                            <div ref={(ref) => (this.topComment = ref)}>\n                                <Comment\n                                    key={comment.data.id}\n                                    comment={comment}\n                                    onChange={this.onCurrentCommentChange.bind(\n                                        this\n                                    )}\n                                />\n                            </div>\n                        </Segment>\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                padding: 10,\n                            }}\n                        >\n                            <Button\n                                disabled={this.state.current <= 0}\n                                onClick={this.goPrev.bind(this)}\n                            >\n                                <Icon name=\"arrow left\" />\n                                Prev\n                            </Button>\n                            <Input\n                                type=\"number\"\n                                max={this.props.comments.length}\n                                min={1}\n                                value={this.state.current + 1}\n                                onChange={(e) =>\n                                    this.setState({\n                                        current: Math.max(\n                                            0,\n                                            parseInt(e.target.value) - 1 || 0\n                                        ),\n                                    })\n                                }\n                            />\n                            <Button\n                                disabled={\n                                    this.state.current >\n                                    this.props.comments.length\n                                }\n                                onClick={this.goNext.bind(this)}\n                            >\n                                Next\n                                <Icon name=\"arrow right\" />\n                            </Button>\n                        </div>\n                        <div\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-around\",\n                                marginTop: 10,\n                            }}\n                        >\n                            <Button onClick={this.onSubmit} size=\"huge\" primary>\n                                Finish\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        comments: state.comments,\n    }),\n    {\n        setProcessed,\n        setComments,\n    }\n)(PickComments)\n","import { navigate } from \"@reach/router\"\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Form, Header, Segment } from \"semantic-ui-react\"\nimport { setTitle } from \"../redux/actions\"\n\nclass Question extends Component {\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        navigate(\"selftext\")\n    }\n    onChange = (e) => {\n        this.props.setTitle(e.target.value)\n    }\n    render() {\n        return (\n            <Segment>\n                <Form onSubmit={this.onSubmit}>\n                    <Header size=\"large\">Edit question</Header>\n                    <Form.Input\n                        value={this.props.title}\n                        onChange={this.onChange}\n                    />\n                    <Form.Button primary type=\"submit\">\n                        Continue\n                    </Form.Button>\n                </Form>\n            </Segment>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        title: state.question.title,\n    }),\n    { setTitle }\n)(Question)\n","import React, { Component } from \"react\"\nimport { foulSpanArray } from \"./sanitize\"\n\nimport { EditorState, ContentState, convertFromHTML } from \"draft-js\"\nimport Editor from \"draft-js-plugins-editor\"\nimport { stateToHTML } from \"draft-js-export-html\"\nimport createLinkPlugin from \"draft-js-anchor-plugin\"\nimport createInlineToolbarPlugin from \"draft-js-inline-toolbar-plugin\"\nimport { ItalicButton, BoldButton, UnderlineButton } from \"draft-js-buttons\"\n\nfunction findWithRegex(regex, contentBlock, callback) {\n    const text = contentBlock.getText()\n    let matchArr, start\n    while ((matchArr = regex.exec(text)) !== null) {\n        start = matchArr.index\n        callback(start, start + matchArr[0].length)\n    }\n}\n\nfunction handleStrategy(contentBlock, callback) {\n    foulSpanArray.forEach((reg) => {\n        findWithRegex(new RegExp(reg, \"ig\"), contentBlock, callback)\n    })\n}\nfunction editStrategy(contentBlock, callback) {\n    findWithRegex(/(?:^|\\W)edit/gim, contentBlock, callback)\n}\n\nlet handleSpan = (props) => {\n    return <span className=\"highlight-danger\">{props.children}</span>\n}\n\nlet editSpan = (props) => {\n    return <span className=\"highlight-warn\">{props.children}</span>\n}\n\nlet decorators = [\n    {\n        strategy: handleStrategy,\n        component: handleSpan,\n    },\n    {\n        strategy: editStrategy,\n        component: editSpan,\n    },\n]\n\nclass EditorComponent extends Component {\n    constructor(p) {\n        super(p)\n\n        this.inlineToolbarPlugin = createInlineToolbarPlugin()\n        this.linkPlugin = createLinkPlugin()\n        this.plugins = [this.inlineToolbarPlugin, this.linkPlugin]\n\n        let d = convertFromHTML(p.data)\n\n        this.state = {\n            editor: d.contentBlocks\n                ? EditorState.createWithContent(\n                      ContentState.createFromBlockArray(\n                          d.contentBlocks,\n                          d.entityMap\n                      )\n                  )\n                : EditorState.createEmpty(),\n        }\n    }\n    handlePress = (e) => {\n        e.stopPropagation()\n    }\n    onChange = (val) => {\n        this.setState({ editor: val })\n\n        let html = stateToHTML(this.state.editor.getCurrentContent())\n\n        if (this.props.data !== html) {\n            this.props.onChange(html)\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Editor\n                    editorState={this.state.editor}\n                    onChange={this.onChange}\n                    decorators={decorators}\n                    plugins={this.plugins}\n                />\n                <this.inlineToolbarPlugin.InlineToolbar>\n                    {(extProps) => (\n                        <>\n                            <BoldButton {...extProps} />\n                            <ItalicButton {...extProps} />\n                            <UnderlineButton {...extProps} />\n                            <this.linkPlugin.LinkButton {...extProps} />\n                        </>\n                    )}\n                </this.inlineToolbarPlugin.InlineToolbar>\n            </div>\n        )\n    }\n}\n\nexport default EditorComponent\n","import { navigate } from \"@reach/router\"\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Form, Header, Segment } from \"semantic-ui-react\"\nimport { setSelftext, setIncludeSelftext } from \"../redux/actions\"\nimport EditorComponent from \"./EditorComponent\"\n\nclass Selftext extends Component {\n    onSubmit = (e) => {\n        e.preventDefault()\n\n        navigate(\"/video/comments\")\n    }\n    onChangeSelftext = (value) => {\n        this.props.setSelftext(value)\n    }\n    onChangeInclude = (e, { checked }) => {\n        this.props.setIncludeSelftext(checked)\n    }\n    render() {\n        return (\n            <Segment>\n                <Form onSubmit={this.onSubmit}>\n                    <Header size=\"large\">Edit selftext</Header>\n                    <Form.Checkbox\n                        label=\"Include selftext?\"\n                        checked={this.props.includeSelftext}\n                        onChange={this.onChangeInclude}\n                    />\n                    <Segment\n                        style={{\n                            display: this.props.includeSelftext\n                                ? \"block\"\n                                : \"none\",\n                        }}\n                    >\n                        <EditorComponent\n                            onChange={this.onChangeSelftext}\n                            data={this.props.selftext}\n                        />\n                    </Segment>\n                    <Form.Button primary type=\"submit\">\n                        Continue\n                    </Form.Button>\n                </Form>\n            </Segment>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        selftext: state.question.selftext_html || \"\",\n        includeSelftext: state.question.includeSelftext,\n    }),\n    { setSelftext, setIncludeSelftext }\n)(Selftext)\n","import { Link, Redirect, Router } from \"@reach/router\"\nimport \"draft-js-inline-toolbar-plugin/lib/plugin.css\"\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button, Container, Header } from \"semantic-ui-react\"\nimport { getSongs, getThemes } from \"../api\"\nimport SelectThread from \"./ChooseThread\"\nimport Final from \"./Final\"\nimport Navbar from \"./Navbar\"\nimport PickComments from \"./PickComments/index\"\nimport Question from \"./Question\"\nimport SelfText from \"./SelfText\"\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.beforeUnload = this.beforeUnload.bind(this)\n    }\n    componentDidMount() {\n        getThemes()\n        getSongs()\n        window.addEventListener(\"beforeunload\", this.beforeUnload)\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.beforeUnload)\n    }\n    beforeUnload(e) {\n        if (this.props.question) {\n            e.preventDefault()\n        }\n    }\n    render() {\n        return (\n            <Container>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <Header style={{ paddingTop: 10 }} as=\"h1\">\n                        <Header.Content>Reddit Video Maker</Header.Content>\n                        <Header.Subheader>Create video</Header.Subheader>\n                    </Header>\n                    <Button style={{ marginLeft: 20 }} basic as={Link} to=\"/\">\n                        Go back\n                    </Button>\n                </div>\n                <Router>\n                    <Navbar path=\"/\">\n                        <SelectThread path=\"/\" />\n                        {/* Can't have fragments in Router element */}\n                        {this.props.question && <Question path=\"post\" />}\n                        {this.props.question && <SelfText path=\"selftext\" />}\n                        {this.props.question && (\n                            <PickComments path=\"comments\" />\n                        )}\n                        {this.props.question && <Final path=\"final\" />}\n                        <Redirect default from=\"*\" to=\"/video/\" noThrow />\n                    </Navbar>\n                </Router>\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = (store) => {\n    return {\n        question: store.question,\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","import { navigate } from \"@reach/router\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Divider, Form, Header, Segment } from \"semantic-ui-react\";\nimport {\n  deleteTheme,\n  deleteThemeFile,\n  editTheme,\n  getTheme,\n  uploadThemeFiles,\n} from \"../api\";\nimport FileInput from \"../FileInput\";\nimport FrontNav from \"../FrontNav\";\nimport { toast } from \"react-toastify\";\n\nlet voices = [\n  {\n    value: \"daniel\",\n    text: \"Daniel UK\",\n  },\n  {\n    value: \"google-us\",\n    text: \"Google US\",\n  },\n];\n\nclass Theme extends React.Component {\n  state = {\n    form: {},\n\n    // Files\n    intro: null,\n    transition: null,\n    outro: null,\n\n    loading: true,\n\n    previewSong: false,\n  };\n  componentDidMount() {\n    getTheme(this.props.themeId).then((theme) => {\n      this.setState(theme);\n      this.setState({ form: theme });\n    });\n  }\n  delete = async () => {\n    await deleteTheme(this.props.themeId);\n    navigate(\"/\", { replace: true });\n  };\n  handleChange = (_, { name, value }) =>\n    this.setState({ form: { ...this.state.form, [name]: value } });\n  handleCheckboxChange = (_, { name, checked }) =>\n    this.setState({ form: { ...this.state.form, [name]: checked } });\n  handleFileChange = (e) => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.files[0] });\n  };\n  submit = () => {\n    this.setState({ loading: true });\n    editTheme(this.props.themeId, this.state.form).then(async () => {\n      const { intro, transition, outro } = this.state;\n\n      // If at least one file has been selected, upload it/them.\n      if (intro || transition || outro) {\n        const data = new FormData();\n\n        intro && data.append(\"intro\", intro);\n        outro && data.append(\"outro\", outro);\n        transition && data.append(\"transition\", transition);\n\n        await uploadThemeFiles(this.props.themeId, data);\n      }\n\n      this.setState({ loading: false });\n\n      toast.success(\"Theme saved\");\n    });\n  };\n  removeFile = (type) => {\n    deleteThemeFile(this.props.themeId, { [type]: true });\n  };\n  render() {\n    return (\n      <Container>\n        <FrontNav />\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <Segment>\n            <Header>Edit theme</Header>\n            <p>\n              Themes consist of an intro, a transition, an outro, and a voice.\n              You can have several themes on one account. The files can be a\n              maximum of 25MB each. All files are optional.{\" \"}\n            </p>\n            <p>\n              <b>Important: Make sure all files are 1920x1080 in size.</b>\n            </p>\n            <Divider />\n            {/* <Form.Group> */}\n            <Form.Input\n              name=\"name\"\n              type=\"text\"\n              label=\"Theme name\"\n              placeholder=\"Name\"\n              value={this.state.form.name}\n              onChange={this.handleChange}\n            ></Form.Input>\n            <Form.Select\n              name=\"voice\"\n              placeholder=\"Voice\"\n              label=\"TTS voice engine\"\n              value={this.state.form.voice}\n              options={voices}\n              onChange={this.handleChange}\n            ></Form.Select>\n            <Form.Input\n              name=\"volume\"\n              type=\"number\"\n              placeholder=\"Volume\"\n              label=\"Music volume while tts is reading (in percent)\"\n              min={0}\n              max={100}\n              step={1}\n              value={this.state.form.volume}\n              onChange={this.handleChange}\n            />\n            {this.props.isAdmin && (\n              <>\n                <Form.Checkbox\n                  name=\"callToAction\"\n                  placeholder=\"Call to action?\"\n                  label=\"Call to action\"\n                  checked={this.state.form.callToAction}\n                  onChange={this.handleCheckboxChange}\n                ></Form.Checkbox>\n                <Form.Select\n                  name=\"translate\"\n                  placeholder=\"Translate to...\"\n                  label=\"Translate to...\"\n                  onChange={this.handleChange}\n                  value={this.state.form.translate}\n                  options={[\n                    { value: \"ES\", text: \"Spanish\" },\n                    {\n                      value: \"PT-BR\",\n                      text: \"Portuguese (Brazil)\",\n                    },\n                    { value: \"FR\", text: \"French\" },\n                    { value: \"DE\", text: \"German\" },\n                    { value: \"RU\", text: \"Russian\" },\n                  ]}\n                  multiple\n                  clearable\n                />\n              </>\n            )}\n\n            {/* </Form.Group> */}\n            <Form.Group grouped>\n              <Header>Intro</Header>\n              <Form.Field inline>\n                <FileInput\n                  accept=\"video/*\"\n                  name=\"intro\"\n                  buttonOnly\n                  label={this.state.intro ? \"Change intro\" : \"No intro\"}\n                  onChange={this.handleFileChange}\n                />\n                <label>{this.state.intro && this.state.intro.origname}</label>\n              </Form.Field>\n            </Form.Group>\n            <Form.Group grouped>\n              <Header>Transition</Header>\n              <Form.Field inline>\n                <FileInput\n                  accept=\"video/*\"\n                  name=\"transition\"\n                  buttonOnly\n                  label={\n                    this.state.transition\n                      ? \"Change transition\"\n                      : \"No transition\"\n                  }\n                  onChange={this.handleFileChange}\n                />\n                <label>\n                  {this.state.transition && this.state.transition.origname}\n                </label>\n                {/* {this.state.transition.origname && <Button icon=\"trash\" secondary size=\"mini\" onClick={() => this.removeFile('transition')}></Button>} */}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group grouped>\n              <Header>Outro</Header>\n              <Form.Field inline>\n                <FileInput\n                  accept=\"video/*\"\n                  name=\"outro\"\n                  buttonOnly\n                  label={this.state.outro ? \"Change outro\" : \"No outro\"}\n                  onChange={this.handleFileChange}\n                />\n                <label>{this.state.outro && this.state.outro.origname}</label>\n              </Form.Field>\n            </Form.Group>\n            <Divider />\n            <Form.Group inline>\n              <Form.Button floated=\"right\" onClick={this.submit} type=\"submit\">\n                Save\n              </Form.Button>\n              <Form.Button\n                floated=\"right\"\n                type=\"button\"\n                color=\"red\"\n                onClick={this.delete}\n              >\n                Delete\n              </Form.Button>\n            </Form.Group>\n          </Segment>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nlet mapStateToProps = (state, props) => ({\n  theme: state.themes.find((th) => th._id === props.themeId),\n  isAdmin: state.user.isAdmin,\n});\n\nexport default connect(mapStateToProps)(Theme);\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n    Container,\n    Divider,\n    Header,\n    List,\n    Loader,\n    Modal,\n    Form,\n    Button,\n    Label,\n    Message,\n} from \"semantic-ui-react\"\nimport {\n    adminGetUsers,\n    adminCreateUser,\n    adminChangePass,\n    adminGiveCredits,\n    adminSetMultiplier,\n} from \"../api\"\n\nclass UserList extends React.Component {\n    state = {\n        addingUser: false,\n        editingUser: false,\n        selectedUser: null,\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        multiplier: 0,\n        creditsToGive: 0,\n        loading: false,\n    }\n    componentDidMount() {\n        adminGetUsers()\n    }\n    createUser = async () => {\n        this.setState({ loading: true })\n        await adminCreateUser({\n            email: this.state.email || null,\n            username: this.state.username || null,\n            password: this.state.password,\n        })\n        this.setState({ loading: false })\n        adminGetUsers()\n        this.closeAddModal()\n    }\n    openAddModal = () =>\n        this.setState({\n            addingUser: true,\n            editingUser: false,\n            loading: false,\n            username: \"\",\n            email: \"\",\n            password: \"\",\n        })\n    closeAddModal = () => this.setState({ addingUser: false })\n\n    setMultiplier = async () => {\n        this.setState({ loading: true })\n        await adminSetMultiplier(\n            this.state.selectedUser._id,\n            this.state.multiplier\n        )\n        this.setState({ loading: false })\n        adminGetUsers()\n        this.closeEditModal()\n    }\n    changeUserPass = async () => {\n        this.setState({ loading: true })\n        await adminChangePass(this.state.selectedUser._id, this.state.password)\n        this.setState({ loading: false })\n        this.closeEditModal()\n    }\n    giveCredits = async () => {\n        this.setState({ loading: true })\n        await adminGiveCredits(\n            this.state.selectedUser._id,\n            this.state.creditsToGive\n        )\n        this.setState({ loading: false, creditsToGive: 0 })\n        adminGetUsers()\n        this.closeEditModal()\n    }\n    openEditModal = (user) =>\n        this.setState({\n            addingUser: false,\n            editingUser: true,\n            loading: false,\n            email: user.email,\n            username: user.username,\n            password: user.password,\n            selectedUser: user,\n            multiplier: user.multiplier,\n        })\n    closeEditModal = () => this.setState({ editingUser: false })\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    render() {\n        return (\n            <Container textAlign=\"left\">\n                <List selection>\n                    {this.props.users ? (\n                        this.props.users.map((user) => (\n                            <List.Item\n                                key={user._id}\n                                onClick={() => this.openEditModal(user)}\n                            >\n                                <List.Content>\n                                    <List.Header>\n                                        {user.email || user.username}{\" \"}\n                                        {user.isAdmin && (\n                                            <Label size=\"tiny\" color=\"red\">\n                                                admin\n                                            </Label>\n                                        )}\n                                    </List.Header>\n                                    <List.Description>\n                                        {user.credits} credits\n                                    </List.Description>\n                                    <List.Description>\n                                        {user.videoCount} videos made\n                                    </List.Description>\n                                </List.Content>\n                            </List.Item>\n                        ))\n                    ) : (\n                        <Loader active />\n                    )}\n                </List>\n                <Divider />\n                <Button onClick={this.openAddModal}>Create user</Button>\n                {/* Adding Modal */}\n                <Modal\n                    open={this.state.addingUser}\n                    onClose={this.closeAddModal}\n                >\n                    <Modal.Content>\n                        <Header>Add user</Header>\n                    </Modal.Content>\n                    <Modal.Content>\n                        <Form>\n                            <Form.Input\n                                placeholder=\"Username\"\n                                type=\"text\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder=\"Email\"\n                                type=\"email\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Form.Button primary onClick={this.createUser}>\n                            Create\n                        </Form.Button>\n                    </Modal.Actions>\n                </Modal>\n                {/* Editing Modal */}\n                <Modal\n                    open={this.state.editingUser}\n                    onClose={this.closeEditModal}\n                >\n                    <Modal.Content>\n                        <Header>Give credits</Header>\n                    </Modal.Content>\n                    <Modal.Content>\n                        <Form loading={this.state.loading}>\n                            <Header>\n                                Current credits:{\" \"}\n                                {this.state.selectedUser &&\n                                    this.state.selectedUser.credits}\n                            </Header>\n                            <Form.Input\n                                type=\"number\"\n                                name=\"creditsToGive\"\n                                step={1}\n                                value={this.state.creditsToGive}\n                                onChange={this.handleChange}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Form.Button\n                            primary\n                            onClick={this.giveCredits}\n                            loading={this.state.loading}\n                        >\n                            Give credits\n                        </Form.Button>\n                    </Modal.Actions>\n                    <Divider />\n                    <Modal.Content>\n                        <Header>Change user password</Header>\n                    </Modal.Content>\n                    <Modal.Content>\n                        <Form>\n                            <Form.Input\n                                disabled\n                                placeholder=\"Email or username\"\n                                type=\"text\"\n                                name=\"email\"\n                                value={this.state.email || this.state.username}\n                                onChange={this.handleChange}\n                            />\n                            <Form.Input\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Form.Button\n                            primary\n                            onClick={this.changeUserPass}\n                            loading={this.state.loading}\n                        >\n                            Change password\n                        </Form.Button>\n                    </Modal.Actions>\n                    <Divider />\n                    <Modal.Content>\n                        <Header>Set price modifier</Header>\n                    </Modal.Content>\n                    <Modal.Content>\n                        {this.state.multiplier > 1 && (\n                            <Message color=\"negative\">\n                                This should probably be less than 1\n                            </Message>\n                        )}\n                        <Form>\n                            <Form.Input\n                                placeholder=\"Price multiplier\"\n                                type=\"number\"\n                                name=\"multiplier\"\n                                min={0}\n                                step={0.01}\n                                value={this.state.multiplier}\n                                onChange={this.handleChange}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Form.Button\n                            primary\n                            onClick={this.setMultiplier}\n                            loading={this.state.loading}\n                        >\n                            Set modifier\n                        </Form.Button>\n                    </Modal.Actions>\n                </Modal>\n            </Container>\n        )\n    }\n}\n\nlet mapStateToProps = (store) => {\n    return {\n        users: store.users,\n    }\n}\n\nexport default connect(mapStateToProps)(UserList)\n","import { Link } from \"@reach/router\"\nimport React from \"react\"\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Segment,\n} from \"semantic-ui-react\"\nimport Credits from \"../Credits\"\nimport FrontNav from \"../FrontNav\"\nimport UserList from \"./UserList\"\n\nclass Dashboard extends React.Component {\n    render() {\n        return (\n            <Container>\n                <FrontNav />\n                <Header textAlign=\"center\" as=\"h1\">\n                    Admin Dashboard\n                </Header>\n                <Grid stackable>\n                    <Grid.Column width={8}>\n                        <Divider horizontal>Credits</Divider>\n                        <Segment>\n                            <Credits />\n                            <Button as={Link} to=\"/buy-credits\">\n                                Buy credits\n                            </Button>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column width={8}>\n                        <Divider horizontal>Users</Divider>\n                        <Segment>\n                            <UserList />\n                        </Segment>\n                    </Grid.Column>\n                </Grid>\n            </Container>\n        )\n    }\n}\n\nexport default Dashboard\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Container, Form, Segment, Header, Message } from \"semantic-ui-react\"\nimport FrontNav from \"./FrontNav\"\nimport { changePassword } from \"./api\"\nimport { toast } from \"react-toastify\"\n\nclass Account extends React.Component {\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    state = {\n        current: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n        changedPass: false,\n        loading: false,\n    }\n    changePass = async () => {\n        this.setState({ loading: true })\n        await changePassword(this.state.current, this.state.password).catch(\n            (err) => {\n                toast.error(\"Something went wrong\")\n            }\n        )\n        this.setState({ changePass: true, loading: false })\n    }\n    render() {\n        let inputerror =\n            this.state.passwordConfirm.length > 0 &&\n            this.state.password !== this.state.passwordConfirm\n        return (\n            <Container>\n                <FrontNav />\n                <Segment>\n                    <Header>Change password</Header>\n                    {this.state.changedPass ? (\n                        <p>Password updated!</p>\n                    ) : (\n                        <Form onSubmit={this.changePass}>\n                            <Form.Input\n                                label=\"Email\"\n                                name=\"email\"\n                                value={this.props.user.email}\n                                disabled\n                            />\n                            {this.props.user.username && (\n                                <Form.Input\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    value={this.props.user.username}\n                                    disabled\n                                />\n                            )}\n                            <Form.Input\n                                placeholder=\"Current password\"\n                                label=\"Current password\"\n                                name=\"current\"\n                                type=\"password\"\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <Form.Input\n                                placeholder=\"New password\"\n                                label=\"New password\"\n                                name=\"password\"\n                                type=\"password\"\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <Form.Input\n                                placeholder=\"Confirm password\"\n                                label=\"Confirm password\"\n                                name=\"passwordConfirm\"\n                                type=\"password\"\n                                onChange={this.handleChange}\n                                required\n                            />\n                            {inputerror && (\n                                <Message negative>\n                                    Passwords do not match\n                                </Message>\n                            )}\n                            <Form.Button\n                                primary\n                                type=\"submit\"\n                                disabled={\n                                    !this.state.current ||\n                                    !this.state.passwordConfirm ||\n                                    inputerror\n                                }\n                            >\n                                Change password\n                            </Form.Button>\n                        </Form>\n                    )}\n                </Segment>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Account)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Container, Segment, Header } from \"semantic-ui-react\"\nimport FrontNav from \"./FrontNav\"\n\nclass Account extends React.Component {\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n    render() {\n        return (\n            <Container>\n                <FrontNav />\n                <Segment>\n                    <Header>Contact us</Header>\n                    <p>\n                        For support, bug reports or business proposals, don't\n                        hesitate contacting us at{\" \"}\n                        <a href=\"mailto:support@redditvideomaker.com\">\n                            support@redditvideomaker.com\n                        </a>\n                    </p>\n                </Segment>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(Account)\n","import { Redirect, Router } from \"@reach/router\"\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport BuyCredits from \"./BuyCredits\"\nimport Dashboard from \"./Dashboard/index\"\nimport Logout from \"./Logout\"\nimport App from \"./render/App\"\nimport Testing from \"./Testing\"\nimport ThemeEdit from \"./Themes/_id\"\nimport { getUser } from \"./api\"\nimport Admin from \"./Admin\"\nimport Account from \"./Account\"\nimport Support from \"./Support\"\n\nconst NotFound = ({ redirect = \"/\" }) => (\n    <Redirect noThrow from=\"*\" to={redirect} />\n)\n\nconst AdminPath = (props) => <div>{props.children}</div>\n\nclass AuthedRouter extends React.Component {\n    componentWillMount() {\n        getUser()\n    }\n    render() {\n        return (\n            <Router>\n                <Dashboard path=\"/\" />\n                <Support path=\"/support\" />\n                <BuyCredits path=\"/buy-credits\" />\n                <App path=\"/video/*\" />\n                <ThemeEdit path=\"/themes/:themeId\" />\n                <Logout path=\"/logout\" />\n                <Account path=\"/account\" />\n                <AdminPath path=\"/admin\">\n                    <Admin path=\"/\" />\n                </AdminPath>\n                <NotFound default />\n            </Router>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n})\n\nexport default connect(mapStateToProps)(AuthedRouter)\n","import React from \"react\"\nimport { Grid, Header, Segment, Form, Message } from \"semantic-ui-react\"\nimport { authorize } from \"./api\"\nimport { Link, redirectTo } from \"@reach/router\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: null,\n            loading: false,\n        }\n\n        this.login = this.login.bind(this)\n    }\n    login() {\n        this.setState({ error: null, loading: true })\n        authorize(this.state.email, this.state.password)\n            .catch((err) => {\n                this.setState({ loading: false })\n                if (typeof err === \"string\") {\n                    this.setState({ error: err })\n                } else {\n                    console.error(err)\n                }\n            })\n            .then((d) => {\n                redirectTo(\"/dashboard\")\n            })\n    }\n    render() {\n        return (\n            <Grid\n                textAlign=\"center\"\n                style={{ height: \"100vh\" }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as=\"h2\">Log in</Header>\n                    <Form onSubmit={this.login}>\n                        <Segment>\n                            <Form.Input\n                                fluid\n                                placeholder=\"Email or username\"\n                                disabled={this.state.loading}\n                                type=\"text\"\n                                value={this.state.email}\n                                onChange={(d) =>\n                                    this.setState({ email: d.target.value })\n                                }\n                            ></Form.Input>\n                            <Form.Input\n                                fluid\n                                placeholder=\"Password\"\n                                disabled={this.state.loading}\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={(d) =>\n                                    this.setState({ password: d.target.value })\n                                }\n                            ></Form.Input>\n                            <Form.Button\n                                fluid\n                                type=\"submit\"\n                                size=\"large\"\n                                disabled={this.state.loading}\n                                color=\"teal\"\n                            >\n                                Log in\n                            </Form.Button>\n                            <div>\n                                <Link to=\"/register\">Register</Link>\n                            </div>\n                        </Segment>\n                    </Form>\n                    <Message size=\"small\">Forgot password?</Message>\n                    {this.state.error && (\n                        <Message error>{this.state.error}</Message>\n                    )}\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default App\n","import React from \"react\"\nimport { Grid, Header, Segment, Form, Comment } from \"semantic-ui-react\"\nimport { register } from \"./api\"\nimport { Link } from \"@reach/router\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n        }\n\n        this.register = this.register.bind(this)\n    }\n    register() {\n        register(this.state.email, this.state.password)\n    }\n    render() {\n        return (\n            <Grid\n                textAlign=\"center\"\n                style={{ height: \"100vh\" }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as=\"h2\">Register</Header>\n                    <Form onSubmit={this.register}>\n                        <Segment>\n                            <Form.Input\n                                fluid\n                                placeholder=\"Email\"\n                                type=\"email\"\n                                value={this.state.email}\n                                onChange={(d) =>\n                                    this.setState({ email: d.target.value })\n                                }\n                            ></Form.Input>\n                            <Form.Input\n                                fluid\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={(d) =>\n                                    this.setState({ password: d.target.value })\n                                }\n                            ></Form.Input>\n                            <Form.Button\n                                fluid\n                                type=\"submit\"\n                                size=\"large\"\n                                color=\"teal\"\n                            >\n                                Register\n                            </Form.Button>\n                            <Comment>\n                                <Link to=\"/login\">Log in</Link>\n                            </Comment>\n                        </Segment>\n                    </Form>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default App\n","import { Redirect, Router } from \"@reach/router\"\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport Login from \"./Login\"\nimport Register from \"./Register\"\n\nconst NotFoundLogin = ({ redirect = \"/login\" }) => (\n    <Redirect noThrow from=\"*\" to={redirect} />\n)\n\nclass BogRouter extends React.Component {\n    render() {\n        return (\n            <Router>\n                <Register path=\"/register\" />\n                <Login path=\"/login\" />\n                <NotFoundLogin default />\n            </Router>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    loggedIn: state.loggedIn,\n})\n\nexport default connect(mapStateToProps)(BogRouter)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport AuthedRouter from \"./AuthedRouter\"\nimport DefaultRouter from \"./DefaultRouter\"\n\nclass App extends React.Component {\n    render() {\n        return this.props.loggedIn ? <AuthedRouter /> : <DefaultRouter />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    loggedIn: state.loggedIn,\n})\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\")\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\")\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            )\n        })\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister()\n        })\n    }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { ToastContainer } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport App from \"./App\"\nimport \"./index.css\"\nimport store from \"./redux/store\"\nimport * as serviceWorker from \"./render/serviceWorker\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n        <ToastContainer position=\"bottom-right\" />\n    </Provider>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}